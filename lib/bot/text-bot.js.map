{"version":3,"sources":["bot/text-bot.js"],"names":[],"mappings":"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","file":"bot/text-bot.js","sourcesContent":["'use strict'\n\nimport DialogCollection from '../dialog/dialog-collection'\nimport Session from '../session'\nimport MemoryStorage from '../storage/memory-storage'\nimport uuid from 'node-uuid'\nimport readline from 'readline'\n\nclass TextBot extends DialogCollection {\n  constructor (options) {\n    super()\n    this.options = options || {\n      maxSessionAge: 14400000,\n      defaultDialogId: '/',\n      minSendDelay: 10\n    }\n    this.configure(this.options)\n  }\n\n  configure (options) {\n    if (options) {\n      for (let key in options) {\n        if (options.hasOwnProperty(key)) {\n          this.options[key] = options[key]\n        }\n      }\n    }\n  }\n\n  beginDialog (address, dialogId, dialogArgs) {\n    if (!this.hasDialog(dialogId)) {\n      throw new Error('Invalid dialog passed to TextBot.beginDialog().')\n    }\n    const message = address || {}\n    const userId = message.to ? message.to.address : 'user'\n    this.dispatchMessage(userId, message, null, dialogId, dialogArgs, true)\n  }\n\n  processMessage (message, callback) {\n    this.emit('message', message)\n    if (!message.id) {\n      message.id = uuid.v1()\n    }\n    if (!message.from) {\n      message.from = {\n        channelId: 'text',\n        address: 'user'\n      }\n    }\n    this.dispatchMessage(message.from.address, message, callback, this.options.defaultDialogId, this.options.defaultDialogArgs)\n  }\n\n  listenStdin () {\n    function onMessage (message) {\n      console.log(message.text)\n    }\n\n    this.on('reply', onMessage)\n    this.on('send', onMessage)\n    this.on('quit', () => {\n      rl.close()\n      process.exit()\n    })\n\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n      terminal: false\n    })\n\n    rl.on('line', (line) => {\n      this.processMessage({\n        text: line || ''\n      })\n    })\n  }\n\n  dispatchMessage (userId, message, callback, dialogId, dialogArgs, newSessionState) {\n    if (newSessionState === undefined) {\n      newSessionState = false\n    }\n    const ses = new Session({\n      localizer: this.options.localizer,\n      minSendDelay: this.options.minSendDelay,\n      dialogs: this,\n      dialogId: dialogId,\n      dialogArgs: dialogArgs\n    })\n    ses.on('send', (reply) => {\n      this.saveData(userId, ses.userData, ses.sessionState, () => {\n        if (reply && reply.text) {\n          if (callback) {\n            callback(null, reply)\n            callback = null\n          } else if (message.id || message.conversationId) {\n            reply.from = message.to\n            reply.to = reply.replyTo || reply.to\n            reply.conversationId = message.conversationId\n            reply.language = message.language\n            this.emit('reply', reply)\n          } else {\n            this.emit('send', reply)\n          }\n        }\n      })\n    })\n    ses.on('error', (err) => {\n      if (callback) {\n        callback(err, null)\n        callback = null\n      } else {\n        this.emit('error', err, message)\n      }\n    })\n    ses.on('quit', () => {\n      this.emit('quit', message)\n    })\n    this.getData(userId, (err, userData, sessionState) => {\n      if (!err) {\n        ses.userData = userData || {}\n        ses.dispatch(newSessionState ? null : sessionState, message)\n      } else {\n        this.emit('error', err, message)\n      }\n    })\n  }\n\n  getData (userId, callback) {\n    if (!this.options.userStore) {\n      this.options.userStore = new MemoryStorage()\n    }\n    if (!this.options.sessionStore) {\n      this.options.sessionStore = new MemoryStorage()\n    }\n    let ops = 2\n    let userData = null\n    let sessionState = null\n    this.options.userStore.get(userId, (err, data) => {\n      if (!err) {\n        userData = data\n        if (--ops === 0) {\n          callback(null, userData, sessionState)\n        }\n      } else {\n        callback(err, null, null)\n      }\n    })\n    this.options.sessionStore.get(userId, (err, data) => {\n      if (!err) {\n        if (data && (new Date().getTime() - data.lastAccess) < this.options.maxSessionAge) {\n          sessionState = data\n        }\n        if (--ops === 0) {\n          callback(null, userData, sessionState)\n        }\n      } else {\n        callback(err, null, null)\n      }\n    })\n  }\n\n  saveData (userId, userData, sessionState, callback) {\n    let ops = 2\n\n    function onComplete (err) {\n      if (!err) {\n        if (--ops === 0) {\n          callback(null)\n        }\n      } else {\n        callback(err)\n      }\n    }\n    this.options.userStore.save(userId, userData, onComplete)\n    this.options.sessionStore.save(userId, sessionState, onComplete)\n  }\n}\n\nexport default TextBot\n"],"sourceRoot":"/Users/jacopodaeli/Devs/botengine-sdk/src"}