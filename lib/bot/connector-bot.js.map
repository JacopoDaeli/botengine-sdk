{"version":3,"sources":["bot/connector-bot.js"],"names":[],"mappings":"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","file":"bot/connector-bot.js","sourcesContent":["'use strict'\n\nimport uuid from 'node-uuid'\nimport DialogCollection from '../dialog/dialog-collection'\nimport RESTSession from '../rest-session'\nimport consts from '../constants'\nimport { post } from '../utils'\n\nclass ConnectorBot extends DialogCollection {\n  constructor (options) {\n    super()\n    this.options = {\n      endpoint: process.env.ENDPOINT,\n      appId: process.env.APP_ID || '',\n      appSecret: process.env.APP_SECRET || '',\n      defaultDialogId: '/',\n      minSendDelay: 100\n    }\n    this.configure(this.options)\n  }\n\n  configure (options) {\n    if (options) {\n      for (let key in options) {\n        if (options.hasOwnProperty(key)) {\n          this.options[key] = options[key]\n        }\n      }\n    }\n  }\n\n  verify (options) {\n    this.configure(options)\n    return (req, res, next) => {\n      let authorized = false\n      const isSecure = req.headers['x-forwarded-proto'] === 'https' || req.headers['x-arr-ssl']\n      if (isSecure && this.options.appId && this.options.appSecret) {\n        if (req.headers.hasOwnProperty('authorization')) {\n          const tmp = req.headers['authorization'].split(' ')\n          const buf = new Buffer(tmp[1], 'base64')\n          const cred = buf.toString().split(':')\n          if (cred[0] === this.options.appId && cred[1] === this.options.appSecret) {\n            authorized = true\n          }\n        }\n      } else {\n        authorized = true\n      }\n      if (authorized) {\n        next()\n      } else {\n        res.send(401)\n      }\n    }\n  }\n\n  listen (dialogId, dialogArgs) {\n    return (req, res) => {\n      if (req.body) {\n        this.dispatchMessage(null, req.body, { dialogId, dialogArgs }, res)\n      } else {\n        let requestData = ''\n        req.on('data', (chunk) => requestData += chunk)\n        req.on('end', () => {\n          try {\n            const msg = JSON.parse(requestData)\n            this.dispatchMessage(null, msg, { dialogId, dialogArgs }, res)\n          } catch (e) {\n            console.error(e)\n            this.emit('error', new Error('Invalid message'))\n            res.send(400)\n          }\n        })\n      }\n    }\n  }\n\n  beginDialog (address, dialogId, dialogArgs) {\n    const message = address\n    message.type = 'Message'\n    if (!message.from) {\n      message.from = this.options.defaultFrom\n    }\n    if (!message.to || !message.from) {\n      throw new Error('Invalid address passed to ConnectorBot.beginDialog()')\n    }\n    if (!this.hasDialog(dialogId)) {\n      throw new Error('Invalid dialog passed to ConnectorBot.beginDialog()')\n    }\n    this.dispatchMessage(message.to.id, message, { dialogId, dialogArgs })\n  }\n\n  dispatchMessage (userId, message, options, res) {\n    try {\n      if (!message || !message.type) {\n        this.emit('error', new Error('Invalid message'))\n        return res ? res.send(400) : null\n      }\n      if (!userId) {\n        if (message.from && message.from.id) {\n          userId = message.from.id\n        } else {\n          this.emit('error', new Error('Invalid message'))\n          return res ? res.send(400) : null\n        }\n      }\n\n      let sessionId = null\n\n      if (message.botConversationData && message.botConversationData[consts.Data.SessionId]) {\n        sessionId = message.botConversationData[consts.Data.SessionId]\n      } else {\n        sessionId = uuid.v1()\n        message.botConversationData = message.botConversationData || {}\n        message.botConversationData[consts.Data.SessionId] = sessionId\n      }\n\n      this.emit(message.type, message)\n\n      if (message.type === 'Message') {\n        const ses = new RESTSession({\n          localizer: this.options.localizer,\n          minSendDelay: this.options.minSendDelay,\n          dialogs: this,\n          dialogId: options.dialogId || this.options.defaultDialogId,\n          dialogArgs: options.dialogArgs || this.options.defaultDialogArgs\n        })\n        ses.on('send', (_reply) => {\n          let reply = _reply || {}\n          reply.botConversationData = message.botConversationData\n          if (reply.text && !reply.language && message.language) {\n            reply.language = message.language\n          }\n\n          const data = {\n            userData: ses.userData,\n            conversationData: ses.conversationData,\n            perUserConversationData: ses.perUserInConversationData\n          }\n\n          data.perUserConversationData[consts.Data.SessionState] = ses.sessionState\n\n          this.saveData(userId, sessionId, data, reply, (err) => {\n            if (err) return this.emit('error', err)\n\n            let endpoint = null\n\n            if (ses.message.to.channelId === 'emulator') {\n              endpoint = this.options.endpoint || 'http://localhost:9000'\n            } else {\n              endpoint = this.options.endpoint || 'https://api.ourapidomain.com'\n            }\n\n            if (res) {\n              this.emit('reply', reply)\n              res.send(200, reply)\n              res = null\n            } else if (ses.message.conversationId) {\n              reply.from = ses.message.to\n              reply.to = ses.message.replyTo ? ses.message.replyTo : ses.message.from\n              reply.replyToMessageId = ses.message.id\n              reply.conversationId = ses.message.conversationId\n              reply.channelConversationId = ses.message.channelConversationId\n              reply.channelMessageId = ses.message.channelMessageId\n              reply.participants = ses.message.participants\n              reply.totalParticipants = ses.message.totalParticipants\n\n              if (!reply.language && ses.message.language) {\n                reply.language = ses.message.language\n              }\n\n              this.emit('reply', reply)\n\n              post(this.options, endpoint, '/bot/v1.0/messages', reply, (err, response) => {\n                if (err) {\n                  console.error(err)\n                  this.emit('error', err)\n                } else if (response.statusCode >= 400) {\n                  console.error(response.statusMessage)\n                }\n              })\n            } else {\n              reply.from = ses.message.from\n              reply.to = ses.message.to\n              this.emit('send', reply)\n              post(this.options, endpoint, '/bot/v1.0/messages', reply, (err, response) => {\n                if (err) {\n                  console.error(err)\n                  this.emit('error', err)\n                } else if (response.statusCode >= 400) {\n                  console.error(response.statusMessage)\n                }\n              })\n            }\n          })\n        })\n        ses.on('error', (err) => {\n          console.error(err, ses.message)\n          this.emit('error', err, ses.message)\n          return res ? res.send(500) : null\n        })\n\n        ses.on('quit', () => this.emit('quit', ses.message))\n\n        this.getData(userId, sessionId, message, (err, data) => {\n          if (!err) {\n            let sessionState = null\n            ses.userData = data.userData || {}\n            ses.conversationData = data.conversationData || {}\n            ses.perUserInConversationData = data.perUserConversationData || {}\n            if (ses.perUserInConversationData.hasOwnProperty(consts.Data.SessionState)) {\n              sessionState = ses.perUserInConversationData[consts.Data.SessionState]\n              delete ses.perUserInConversationData[consts.Data.SessionState]\n            }\n            if (options.replyToDialogId) {\n              if (sessionState && sessionState.callstack[sessionState.callstack.length - 1].id === options.replyToDialogId) {\n                ses.dispatch(sessionState, message)\n              }\n            } else {\n              ses.dispatch(sessionState, message)\n            }\n          } else {\n            console.error(err, message)\n            this.emit('error', err, message)\n          }\n        })\n      } else if (res) {\n        let msg = null\n        switch (message.type) {\n          case 'BotAddedToConversation':\n            msg = this.options.groupWelcomeMessage\n            break\n          case 'UserAddedToConversation':\n            msg = this.options.userWelcomeMessage\n            break\n          case 'EndOfConversation':\n            msg = this.options.goodbyeMessage\n            break\n        }\n        res.send(msg ? { type: message.type, text: msg } : {})\n      }\n    } catch (e) {\n      console.error(e)\n      const error = e instanceof Error ? e : new Error(e.toString())\n      this.emit('error', error)\n      return res ? res.send(500) : null\n    }\n  }\n\n  getData (userId, sessionId, msg, callback) {\n    const botPath = `/${this.options.appId}`\n    const userPath = `${botPath}/users/${userId}`\n    const convoPath = `${botPath}/conversations/${sessionId}`\n    const perUserConvoPath = `${botPath}/conversations/${sessionId}/users/${userId}`\n\n    let ops = 3\n    const data = {}\n\n    function load (id, field, store, botData) {\n      data[field] = botData\n      if (store) {\n        store.get(id, (err, item) => {\n          if (callback) {\n            if (!err) {\n              data[field] = item\n              if (--ops === 0) {\n                callback(null, data)\n              }\n            } else {\n              callback(err, null)\n              callback = null\n            }\n          }\n        })\n      } else if (callback && --ops === 0) {\n        callback(null, data)\n      }\n    }\n\n    load(userPath, 'userData', this.options.userStore, msg.botUserData)\n    load(convoPath, 'conversationData', this.options.conversationStore, msg.botConversationData)\n    load(perUserConvoPath, 'perUserConversationData', this.options.perUserInConversationStore, msg.botPerUserInConversationData)\n  }\n\n  saveData (userId, sessionId, data, msg, callback) {\n    const botPath = `/${this.options.appId}`\n    const userPath = `${botPath}/users/${userId}`\n    const convoPath = `${botPath}/conversations/${sessionId}`\n    const perUserConvoPath = `${botPath}/conversations/${sessionId}/users/${userId}`\n\n    let ops = 3\n\n    function save (id, field, store, botData) {\n      if (store) {\n        store.save(id, botData, (err) => {\n          if (callback) {\n            if (!err && --ops === 0) {\n              callback(null)\n            } else {\n              callback(err)\n              callback = null\n            }\n          }\n        })\n      } else {\n        msg[field] = botData\n        if (callback && --ops === 0) {\n          callback(null)\n        }\n      }\n    }\n\n    save(userPath, 'botUserData', this.options.userStore, data.userData)\n    save(convoPath, 'botConversationData', this.options.conversationStore, data.conversationData)\n    save(perUserConvoPath, 'botPerUserInConversationData', this.options.perUserInConversationStore, data.perUserConversationData)\n  }\n}\n\nexport default ConnectorBot\n"],"sourceRoot":"/Users/jacopodaeli/Devs/wit-bot-builder/src"}