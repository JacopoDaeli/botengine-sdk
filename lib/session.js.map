{"version":3,"sources":["session.js"],"names":[],"mappings":"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","file":"session.js","sourcesContent":["'use strict'\n\nimport { EventEmitter } from 'events'\nimport _ from 'lodash'\nimport sprintf from 'sprintf-js'\nimport Dialog from './dialog/dialog'\nimport SessionConfidenceComparator from './session-confidence-comparator'\nimport { extractArgs } from './utils'\n\nexport default class Session extends EventEmitter {\n  constructor (opts) {\n    super()\n    this.options = opts\n    this.msgSent = false\n    this._isReset = false\n    this.lastSendTime = new Date().getTime()\n    this.sendQueue = []\n    this.dialogs = opts.dialogs\n\n    if (typeof this.options.minSendDelay !== 'number') {\n      this.options.minSendDelay = 1000\n    }\n  }\n\n  dispatch (sessionState, message) {\n    let index = 0\n    let handlers = null\n    const next = () => {\n      const handler = index < handlers.length ? handlers[index] : null\n      if (handler) {\n        index++\n        handler(this, next)\n      } else {\n        this.routeMessage()\n      }\n    }\n    this.sessionState = sessionState || {\n      callstack: [],\n      lastAccess: 0\n    }\n    this.sessionState.lastAccess = new Date().getTime()\n    this.message = message || {\n      text: ''\n    }\n    if (!this.message.type) {\n      this.message.type = 'Message'\n    }\n    handlers = this.dialogs.getMiddleware()\n    next()\n    return this\n  }\n\n  error (_err) {\n    let err = _err instanceof Error ? _err : new Error(_err.toString())\n    console.error(`Session Error: ${err.message}`)\n    this.emit('error', err)\n    return this\n  }\n\n  getText (msgId) {\n    const args = extractArgs(arguments, 1)\n    return this.vGetText(msgId, args)\n  }\n\n  nGetText (msgId, msgIdPlural, count) {\n    let tmpl = null\n    if (this.options.localizer && this.message) {\n      tmpl = this.options.localizer.ngettext(this.message.language || '', msgId, msgIdPlural, count)\n    } else if (count === 1) {\n      tmpl = msgId\n    } else {\n      tmpl = msgIdPlural\n    }\n    return sprintf.sprintf(tmpl, count)\n  }\n\n  send (msg) {\n    const args = extractArgs(arguments, 1)\n    const ss = this.sessionState\n    if (ss.callstack.length > 0) {\n      ss.callstack[ss.callstack.length - 1].state = this.dialogData || {}\n    }\n    const message = typeof msg === 'string' ? this.createMessage(msg, args) : msg\n    this.delayedEmit('send', message)\n    return this\n  }\n\n  getMessageReceived () {\n    return this.message.channelData\n  }\n\n  sendMessage (msg) {\n    return this.send({ channelData: msg })\n  }\n\n  messageSent () {\n    return this.messageSent\n  }\n\n  beginDialog (id, args) {\n    const dialog = this.dialogs.getDialog(id)\n    if (!dialog) {\n      throw new Error(`Dialog[${id}] not found.`)\n    }\n    const ss = this.sessionState\n    if (ss.callstack.length > 0) {\n      ss.callstack[ss.callstack.length - 1].state = this.dialogData || {}\n    }\n    const cur = {\n      id: id,\n      state: {}\n    }\n    ss.callstack.push(cur)\n    this.dialogData = cur.state\n    dialog.begin(this, args)\n    return this\n  }\n\n  replaceDialog (id, args) {\n    const dialog = this.dialogs.getDialog(id)\n    if (!dialog) {\n      throw new Error(`Dialog[${id}] not found.`)\n    }\n    const ss = this.sessionState\n    const cur = {\n      id: id,\n      state: {}\n    }\n    ss.callstack.pop()\n    ss.callstack.push(cur)\n    this.dialogData = cur.state\n    dialog.begin(this, args)\n    return this\n  }\n\n  endDialog (result) {\n    const args = extractArgs(arguments, 1)\n    const ss = this.sessionState\n    if (!ss || !ss.callstack || ss.callstack.length === 0) {\n      console.error('ERROR: Too many calls to session.endDialog().')\n      return this\n    }\n    let m = null\n    let r = {}\n    if (result) {\n      if (typeof result === 'string') {\n        m = this.createMessage(result, args)\n      } else if (result.hasOwnProperty('text') || result.hasOwnProperty('attachments') || result.hasOwnProperty('channelData')) {\n        m = result\n      } else {\n        r = result\n      }\n    }\n    if (!r.hasOwnProperty('resumed')) {\n      r.resumed = Dialog.resumeReason.completed\n    }\n\n    r.childId = ss.callstack[ss.callstack.length - 1].id\n    if (ss.callstack.length > 0) {\n      ss.callstack.pop()\n    }\n    if (ss.callstack.length > 0) {\n      const cur = ss.callstack[ss.callstack.length - 1]\n      this.dialogData = cur.state\n      if (m) this.send(m)\n      const d = this.dialogs.getDialog(cur.id)\n      d.dialogResumed(this, r)\n    } else {\n      this.send(m)\n      if (r.error) {\n        this.emit('error', r.error)\n      } else {\n        if (!result) {\n          this.delayedEmit('quit')\n        }\n      }\n    }\n    return this\n  }\n\n  compareConfidence (language, utterance, score, callback) {\n    const comparer = new SessionConfidenceComparator(this, language, utterance, score, callback)\n    comparer.next()\n  }\n\n  reset (dialogId, dialogArgs) {\n    this._isReset = true\n    this.sessionState.callstack = []\n    if (!dialogId) {\n      dialogId = this.options.dialogId\n      dialogArgs = dialogArgs || this.options.dialogArgs\n    }\n    this.beginDialog(dialogId, dialogArgs)\n    return this\n  }\n\n  isReset () {\n    return this._isReset\n  }\n\n  createMessage (text, args) {\n    const message = {\n      text: this.vGetText(text, args)\n    }\n    if (this.message.language) {\n      message.language = this.message.language\n    }\n    return message\n  }\n\n  routeMessage () {\n    try {\n      const ss = this.sessionState\n      if (ss.callstack.length === 0) {\n        this.beginDialog(this.options.dialogId, this.options.dialogArgs)\n      } else if (this.validateCallstack()) {\n        const cur = ss.callstack[ss.callstack.length - 1]\n        const dialog = this.dialogs.getDialog(cur.id)\n        this.dialogData = cur.state\n        dialog.replyReceived(this)\n      } else {\n        console.error('Callstack is invalid, resetting session.')\n        this.reset(this.options.dialogId, this.options.dialogArgs)\n      }\n    } catch (e) {\n      this.error(e)\n    }\n  }\n\n  vGetText (msgId, args) {\n    let tmpl\n    if (this.options.localizer && this.message) {\n      tmpl = this.options.localizer.getText(this.message.language || '', msgId)\n    } else {\n      tmpl = msgId\n    }\n    return args && args.length > 0 ? sprintf.vsprintf(tmpl, args) : tmpl\n  }\n\n  validateCallstack () {\n    const ss = this.sessionState\n    for (let i = 0; i < ss.callstack.length; i++) {\n      const id = ss.callstack[i].id\n      if (!this.dialogs.hasDialog(id)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  delayedEmit (event, message) {\n    let now = new Date().getTime()\n    const delaySend = () => {\n      setTimeout(() => {\n        const entry = this.sendQueue.shift()\n        this.lastSendTime = now = new Date().getTime()\n        this.emit(entry.event, _.clone(entry.msg))\n        if (this.sendQueue.length > 0) {\n          delaySend()\n        }\n      }, (this.options.minSendDelay - (now - this.lastSendTime)))\n    }\n    if (this.sendQueue.length === 0) {\n      this.msgSent = true\n      if ((now - this.lastSendTime) >= this.options.minSendDelay) {\n        this.lastSendTime = now\n        this.emit(event, _.clone(message))\n      } else {\n        this.sendQueue.push({\n          event,\n          msg: message\n        })\n        delaySend()\n      }\n    } else {\n      this.sendQueue.push({\n        event,\n        msg: message\n      })\n    }\n  }\n}\n"],"sourceRoot":"/Users/jacopodaeli/Devs/wit-bot-builder/src"}