{"version":3,"sources":["session.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;;;;;;;;;IAEqB,O;;;AACnB,mBAAa,IAAb,EAAmB;AAAA;;AAAA;;AAEjB,UAAK,OAAL,GAAe,IAAf;AACA,UAAK,OAAL,GAAe,KAAf;AACA,UAAK,QAAL,GAAgB,KAAhB;AACA,UAAK,YAAL,GAAoB,IAAI,IAAJ,GAAW,OAAX,EAApB;AACA,UAAK,SAAL,GAAiB,EAAjB;AACA,UAAK,OAAL,GAAe,KAAK,OAApB;;AAEA,QAAI,OAAO,MAAK,OAAL,CAAa,YAApB,KAAqC,QAAzC,EAAmD;AACjD,YAAK,OAAL,CAAa,YAAb,GAA4B,IAA5B;AACD;AAXgB;AAYlB;;;;6BAES,Y,EAAc,O,EAAS,CAEhC;;;0BAEM,I,EAAM;AACX,UAAI,MAAM,gBAAgB,KAAhB,GAAwB,IAAxB,GAA+B,IAAI,KAAJ,CAAU,KAAK,QAAL,EAAV,CAAzC;AACA,cAAQ,KAAR,qBAAgC,IAAI,OAApC;AACA,WAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACA,aAAO,IAAP;AACD;;;4BAEQ,K,EAAO,CAEf;;;6BAES,K,EAAO,W,EAAa,K,EAAO,CAEpC;;;yBAEK,G,EAAK,CAEV;;;yCAEqB,CAErB;;;gCAEY,G,EAAK,CAEjB;;;kCAEc;AACb,aAAO,KAAK,WAAZ;AACD;;;gCAEY,E,EAAI,I,EAAM,CAEtB;;;kCAEc,E,EAAI,I,EAAM,CAExB;;;8BAEU,M,EAAQ,CAElB;;;sCAEkB,Q,EAAU,S,EAAW,K,EAAO,Q,EAAU,CAExD;;;4BAEQ,CAER;;;8BAEU,CAEV;;;kCAEc,I,EAAM,I,EAAM,CAE1B;;;mCAEe,CAEf;;;6BAES,K,EAAO,I,EAAM,CAEtB;;;wCAEoB,CAEpB;;;gCAEY,K,EAAO,O,EAAS,CAE5B;;;;;;kBA5FkB,O","file":"session.js","sourcesContent":["'use strict'\n\nimport { EventEmitter } from 'events'\nimport Dialog from './dialog/dialog'\n\nexport default class Session extends EventEmitter {\n  constructor (opts) {\n    super()\n    this.options = opts\n    this.msgSent = false\n    this._isReset = false\n    this.lastSendTime = new Date().getTime()\n    this.sendQueue = []\n    this.dialogs = opts.dialogs\n\n    if (typeof this.options.minSendDelay !== 'number') {\n      this.options.minSendDelay = 1000\n    }\n  }\n\n  dispatch (sessionState, message) {\n\n  }\n\n  error (_err) {\n    let err = _err instanceof Error ? _err : new Error(_err.toString())\n    console.error(`Session Error: ${err.message}`)\n    this.emit('error', err)\n    return this\n  }\n\n  getText (msgId) {\n\n  }\n\n  nGetText (msgId, msgIdPlural, count) {\n\n  }\n\n  send (msg) {\n\n  }\n\n  getMessageReceived () {\n\n  }\n\n  sendMessage (msg) {\n\n  }\n\n  messageSent () {\n    return this.messageSent\n  }\n\n  beginDialog (id, args) {\n\n  }\n\n  replaceDialog (id, args) {\n\n  }\n\n  endDialog (result) {\n\n  }\n\n  compareConfidence (language, utterance, score, callback) {\n\n  }\n\n  reset () {\n\n  }\n\n  isReset () {\n\n  }\n\n  createMessage (text, args) {\n\n  }\n\n  routeMessage () {\n\n  }\n\n  vGetText (msgId, args) {\n\n  }\n\n  validateCallstack () {\n\n  }\n\n  delayedEmit (event, message) {\n\n  }\n}\n"],"sourceRoot":"/Users/jacopodaeli/Devs/wit-bot-builder/src"}