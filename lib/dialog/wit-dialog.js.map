{"version":3,"sources":["dialog/wit-dialog.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEM,S;;;AACJ,qBAAa,MAAb,EAAqB;AAAA;;AAAA;;AAEnB,UAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,UAAK,WAAL,GAAmB,OAAO,WAA1B;AAHmB;AAIpB;;;;qCAEiB,Q,EAAU,S,EAAW,Q,EAAU;AAC/C,gBAAU,SAAV,CAAoB,SAApB,EAA+B,KAAK,UAApC,EAAgD,KAAK,WAArD,EAAkE,QAAlE;AACD;;;;;;AAGH,UAAU,SAAV,GAAsB,UAAU,SAAV,EAAqB,UAArB,EAAiC,WAAjC,EAA8C,QAA9C,EAAwD;AAC5E,MAAI,MAAM,WAAW,IAAX,EAAV;AACA,MAAI,IAAI,WAAJ,CAAgB,KAAhB,MAA4B,IAAI,MAAJ,GAAa,CAA7C,EAAiD;AAC/C,WAAO,KAAP;AACD;AACD,SAAO,mBAAmB,aAAa,EAAhC,CAAP;;AAEA,MAAM,UAAU;AACd,UAAM;AACJ,cAAQ;AADJ;AADQ,GAAhB;;AAMA,oBAAQ,GAAR,CAAY,GAAZ,EAAiB,OAAjB,EAA0B,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AAC5C,QAAI,iBAAiB,KAArB;AACA,QAAI;AACF,UAAI,CAAC,GAAL,EAAU;AAAA;AACR,cAAM,SAAS,KAAK,KAAL,CAAW,IAAX,CAAf;;;;AAIA,cAAM,UAAU,CAAC,OAAO,QAAP,CAAgB,MAAhB,IAA0B,EAA3B,EAA+B,GAA/B,CAAmC,UAAC,MAAD,EAAY;AAC7D,mBAAO;AACL,qBAAO,OAAO,UADT;AAEL,sBAAQ,OAAO;AAFV,aAAP;AAID,WALe,CAAhB;;;;AASA,cAAM,aAAa,OAAO,IAAP,CAAY,OAAO,QAAnB,EAA6B,MAA7B,CAAoC,UAAC,GAAD,EAAS;AAC9D,mBAAO,QAAQ,QAAf;AACD,WAFkB,CAAnB;;AAIA,cAAM,WAAW,WAAW,GAAX,CAAe,UAAC,GAAD,EAAS;AACvC,mBAAO;AACL,0BAAY,OAAO,QAAP,CAAgB,GAAhB,EAAqB,CAArB,EAAwB,UAD/B;AAEL,sBAAQ,OAAO,QAAP,CAAgB,GAAhB,EAAqB,CAArB,EAAwB,KAF3B;AAGL,oBAAM,GAHD;AAIL,0BAAY;AAJP,aAAP;AAMD,WAPgB,CAAjB;;AASA,2BAAiB,IAAjB;AACA,mBAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB;AA5BQ;AA6BT,OA7BD,MA6BO;AACL,yBAAiB,IAAjB;AACA,iBAAS,GAAT;AACD;AACF,KAlCD,CAkCE,OAAO,CAAP,EAAU;AACV,cAAQ,KAAR,CAAc,EAAE,KAAhB;AACA,UAAI,CAAC,cAAL,EAAqB;AACnB,iBAAS,CAAT;AACD,OAFD,MAEO;AACL,gBAAQ,KAAR,CAAc,EAAE,QAAF,EAAd;AACD;AACF;AACF,GA5CD;AA6CD,CA1DD;;kBA4De,S","file":"dialog/wit-dialog.js","sourcesContent":["'use strict'\n\nimport request from 'request'\nimport IntentDialog from './intent-dialog'\n\nclass WitDialog extends IntentDialog {\n  constructor (params) {\n    super()\n    this.serviceUri = params.serviceUri\n    this.bearerToken = params.bearerToken\n  }\n\n  recognizeIntents (language, utterance, callback) {\n    WitDialog.recognize(utterance, this.serviceUri, this.bearerToken, callback)\n  }\n}\n\nWitDialog.recognize = function (utterance, serviceUri, bearerToken, callback) {\n  let uri = serviceUri.trim()\n  if (uri.lastIndexOf('&q=') !== (uri.length - 3)) {\n    uri += '&q='\n  }\n  uri += encodeURIComponent(utterance || '')\n\n  const reqOpts = {\n    auth: {\n      bearer: bearerToken\n    }\n  }\n\n  request.get(uri, reqOpts, (err, res, body) => {\n    let calledCallback = false\n    try {\n      if (!err) {\n        const result = JSON.parse(body)\n\n        // console.log(result)\n\n        const intents = (result.entities.intent || []).map((intent) => {\n          return {\n            score: intent.confidence,\n            intent: intent.value\n          }\n        })\n\n        // console.log(intents)\n\n        const entityKeys = Object.keys(result.entities).filter((key) => {\n          return key !== 'intent'\n        })\n\n        const entities = entityKeys.map((key) => {\n          return {\n            confidence: result.entities[key][0].confidence,\n            entity: result.entities[key][0].value,\n            type: key,\n            resolution: false\n          }\n        })\n\n        calledCallback = true\n        callback(null, intents, entities)\n      } else {\n        calledCallback = true\n        callback(err)\n      }\n    } catch (e) {\n      console.error(e.stack)\n      if (!calledCallback) {\n        callback(e)\n      } else {\n        console.error(e.toString())\n      }\n    }\n  })\n}\n\nexport default WitDialog\n"],"sourceRoot":"/Users/jacopodaeli/Devs/wit-bot-builder/src"}