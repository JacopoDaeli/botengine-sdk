{"version":3,"sources":["dialog/dialog-collection.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEM,gB;;;AACJ,8BAAe;AAAA;;AAAA;;AAEb,UAAK,UAAL,GAAkB,EAAlB;AACA,UAAK,OAAL,GAAe,EAAf;AACA,qBAAiB,aAAjB,CAA+B,oBAAO,QAAP,CAAgB,MAA/C,IAAyD,sBAAzD;AACA,UAAK,GAAL,CAAS,iBAAiB,aAA1B;AALa;AAMd;;;;wBAEI,E,EAAI,M,EAAQ;AACf,UAAI,UAAU,IAAd;AACA,UAAI,OAAO,EAAP,KAAc,QAAlB,EAA4B;AAC1B,YAAI,MAAM,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACzB,mBAAS,2BAAiB,sBAAU,MAAV,CAAjB,CAAT;AACD,SAFD,MAEO,IAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AACvC,mBAAS,2BAAiB,sBAAU,CAAC,MAAD,CAAV,CAAjB,CAAT;AACD;AACD,YAAI,KAAK,IAAT;AACA,mBAAW,KAAK,EAAL,EAAS,GAAG,EAAH,IAAS,MAAlB,EAA0B,EAArC;AACD,OARD,MAQO;AACL,kBAAU,EAAV;AACD;AACD,WAAK,IAAI,GAAT,IAAgB,OAAhB,EAAyB;AACvB,YAAI,CAAC,KAAK,OAAL,CAAa,cAAb,CAA4B,GAA5B,CAAL,EAAuC;AACrC,eAAK,OAAL,CAAa,GAAb,IAAoB,QAAQ,GAAR,CAApB;AACD,SAFD,MAEO;AACL,gBAAM,IAAI,KAAJ,aAAoB,GAApB,uBAAN;AACD;AACF;AACD,aAAO,IAAP;AACD;;;8BAEU,E,EAAI;AACb,aAAO,KAAK,OAAL,CAAa,EAAb,CAAP;AACD;;;oCAEgB;AACf,aAAO,KAAK,UAAZ;AACD;;;8BAEU,E,EAAI;AACb,aAAO,KAAK,OAAL,CAAa,cAAb,CAA4B,EAA5B,CAAP;AACD;;;wBAEI,E,EAAI;AACP,WAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB;AACA,aAAO,IAAP;AACD;;;;;;AAGH,iBAAiB,aAAjB,GAAiC,EAAjC;;kBAEe,gB","file":"dialog/dialog-collection.js","sourcesContent":["'use strict'\n\nimport { EventEmitter } from 'events'\nimport SimpleDialog from './simple-dialog'\nimport Prompt from './prompt/prompt'\nimport consts from '../constants'\nimport { waterfall } from '../utils'\n\nclass DialogCollection extends EventEmitter {\n  constructor () {\n    super()\n    this.middleware = []\n    this.dialogs = {}\n    DialogCollection.systemDialogs[consts.DialogId.Prompt] = new Prompt()\n    this.add(DialogCollection.systemDialogs)\n  }\n\n  add (id, dialog) {\n    let dialogs = null\n    if (typeof id === 'string') {\n      if (Array.isArray(dialog)) {\n        dialog = new SimpleDialog(waterfall(dialog))\n      } else if (typeof dialog === 'function') {\n        dialog = new SimpleDialog(waterfall([dialog]))\n      }\n      let _a = null\n      dialogs = (_a = {}, _a[id] = dialog, _a)\n    } else {\n      dialogs = id\n    }\n    for (let key in dialogs) {\n      if (!this.dialogs.hasOwnProperty(key)) {\n        this.dialogs[key] = dialogs[key]\n      } else {\n        throw new Error(`Dialog[${key}] already exists.`)\n      }\n    }\n    return this\n  }\n\n  getDialog (id) {\n    return this.dialogs[id]\n  }\n\n  getMiddleware () {\n    return this.middleware\n  }\n\n  hasDialog (id) {\n    return this.dialogs.hasOwnProperty(id)\n  }\n\n  use (fn) {\n    this.middleware.push(fn)\n    return this\n  }\n}\n\nDialogCollection.systemDialogs = {}\n\nexport default DialogCollection\n"],"sourceRoot":"/Users/jacopodaeli/Devs/wit-bot-builder/src"}